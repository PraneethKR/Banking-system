#ifndef ACCOUNT_H_
#define ACCOUNT_H_

#include "accountTicketingUI.h"

// Header file contents goes here...

/* The struct UserLogin contains the following
1.A string variable nameofcustomer that store 31 values with 30 valid charaters and a single string terminator as ending value
2.A string variable userlogin that store 12 values with 11 valid charaters and a single string terminator as ending value
3.A string variable password that store 8 values with 1 valid charaters and a single string terminator as ending value
*/
struct UserLogin
{
	char nameofcustomer[31];
	char userlogin[12];
	char password[9];
}login;

/* The struct UserLogin contains the following
1. A variable name DOB of type int that will store dateofbirth of the user in the account
2. A variable name HHincome of type double that will store the income of the user in the account
3.A string variable name that store 31 values with 30 valid charaters and a single string terminator as ending value. It will stroe the county name.
*/
struct Demographic
{
	int DOB;
	double HHIncome;
	char name[31];
}demo;

/* The struct Account contains the following
1. A variable name acnumber of type int that will store account number of the user in the account
2. A variable name type of type char that will store a single charater wich indicates the wheather the accout is customer oe agent
3. The struct UserLogin is accessed using the type login
4. The struct Demographic is acessed using the type demo
*/
struct Account
{
	int acnumber;
	char type;
	struct UserLogin login;
	struct Demographic demo;

};

/* The function recieves an address of the struct account as the parameter */
/* The function returns a variable fo type char */
/* The purpose of the function is to take input form the user */
/* The input like account number and account type and store it in the respective members of the struct Account */
/* The functions calls in other functions to take valid input from the user */
char getAccount();

/* The function recieves parameters of address of struct account and address of the struct AccountTicketingData */
/* It returns the a value of type int */
/* The purpose if this function is to get the account number from the system generated by calling other functions with necessary logics and also to get the account
   of the particular account */
   /* It store those values in the Account struct */
int getselectedaccount();

/* The function recieves an address of the struct account as the parameter */
/* The function returns a variable fo type int */
/* The purpose of the function is to take input form the user */
/* The input like userlogin,nameofcustomer and password and store it in the respective members of the struct Account using type login */
/* The functions calls in other functions to take valid input from the user */
int getUserLogin();

/* The function recieves an address of the struct account as the parameter */
/* The function returns a variable fo type char */
/* The purpose of the function is to take input form the user */
/* The input like DOB, Income and name of the country and store it in the respective members of the struct Account using type demo */
/* The functions calls in other functions to take valid input from the user */
char getDemographic();

/* The function recieves an address of the struct account as the parameter */
/* The function does not return any value its a void function */
/* The user selects the menu which ever he want to edit like account type, login details or demographic details */
/* The user will be able to select the option the the display menu and then the respective options are diplayed inthe function by calling other functions */
/* The purpose of this function is to edit the values of a particular account */
/* The function loops untill 0 is entered as input*/
void updateAccount();

/* The function recieves an address of the struct account as the parameter */
/* The function does not return any value its a void function */
/* The user selects the menu which ever he wants to edit like password , userid, name of customer */
/* The user will be able to select the option the the display menu and then the respective options are diplayed inthe function by calling other functions */
/* The purpose of this function is to edit the values of a particular account */
/* The function loops untill 0 is entered as input*/
void updateUserLogin();

/* The function recieves an address of the struct account as the parameter */
/* The function does not return any value its a void function */
/* The user selects the menu which ever he wants to edit like Dateofbirth, Income, name of country */
/* The user will be able to select the option the the display menu and then the respective options are diplayed in the function by calling other functions */
/* The purpose of this function is to edit the values of a particular account */
/* The function loops untill 0 is entered as input */
void updateDemographic();

/* The function does not recieve any parameters it is a void function */
/* The funtion does not return any values its a void type */
/* The purpose of the function is used to print a statement for the login userid */
void loginheader();

/* The function does not recieve any parameters it is a void function */
/* The funtion does not return any values its a void type */
/* The purpose of the function is used to print a statement for the account type */
void accounttypeheader();

/* The function does not recieve any parameters it is a void function */
/* The funtion does not return any values its a void type */
/* The purpose of the function is used to print a statement for the demograpic country name */
void countryheader();

/* The function does not recieve any parameters it is a void function */
/* The funtion does not return any values its a void type */
/* The purpose of the function is used to print a statement for the demo income */
void incomeHeader();

/* The function does not recieve any parameters it is a void function */
/* The funtion does not return any values its a void type */
/* The purpose of the function is used to print a statement for the login password */
void passwordheader();

/* The function does not recieve any parameters it is a void function */
/* The funtion does not return any values its a void type */
/* The purpose of the function is used to print a statement for the login name of customer */
void displaynameheader();

/* The function does not recieve any parameters it is a void function */
/* The funtion does not return any values its a void type */
/* The purpose of the function is used to print a statement for the demo date of birth */
void birthheader();

/* The function does not recieve any parameters it is a void function */
/* The funtion does not return any values its a void type */
/* The purpose of the function is used to print a statement for the account number */
void accountnumberheader();

/* The function recieves parameters of address of struct account and address of the struct AccountTicketingData */
/* The function return a value of type int that is equal to the highest account number found and 1 is added to it and returned */
/* The purpose of the function is used to find the account number when we create a new account */
/* It finds the highest account number in the struct and then adds 1 to it and returns the value */
int getAccountNumber();

/* The function recieves parameters of address of struct ticket and address of the struct AccountTicketingData */
/* The function return a value of type int that is equal to the highest ticket number found and 1 is added to it and returned */
/* The purpose of the function is used to find the ticket number when we create a new ticket */
/* It finds the highest ticket number in the struct and then adds 1 to it and returns the value */
int getticketnumber();

/* The function recieves parameters of address of struct account and address of the struct AccountTicketingData */
/* The function return a value of type int */
/* The function is used to get the details of the new ticket like ticket number , subject, opening message for the new ticket some functions are called to perform
   necessary logics */
   /* The values are stored in the struct tickets */
int findhighestticketnumber();

#endif